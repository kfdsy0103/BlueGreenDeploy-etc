name: CD Pipeline

on:
  push:
    branches:
      - main  # main 브랜치에 push 되었을 때 실행

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}

    steps:
      # 깃헙 리포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # JDK 설정
      - name: Set up and JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      # .jar 빌드
      - name: Build jar
        run: ./gradlew --info clean bootJar -x test

      # docker 로그인
      - name: docker login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # image build 및 push
      - name: docker build and push
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          push: true
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-to: type=inline
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ env.IMAGE_TAG }}

      # EC2 SSM 연결 및 쉘 스크립트 실행
      - name: Deploy to EC2 via SSM
        if: github.ref == 'refs/heads/main'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-2
          AWS_EC2_ID: ${{ secrets.AWS_EC2_ID }}
        run: |
          aws ssm send-command \
            --targets "Key=instanceIds,Values=$AWS_EC2_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy new Docker image" \
            --parameters 'commands=[
                "rm -f /home/ubuntu/.env",
                "echo \"${{ secrets.ENV }}\" > /home/ubuntu/.env",
                "sudo chmod +x /home/ubuntu/deploy.sh",
                "sudo /home/ubuntu/deploy.sh ${{ env.IMAGE_TAG }}"
            ]' \
            --region $AWS_REGION